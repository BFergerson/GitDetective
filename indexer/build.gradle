plugins {
    id "com.avast.gradle.docker-compose" version "0.6.11"
}

group = 'io.gitdetective.indexer'

apply plugin: 'application'
mainClassName = 'io.gitdetective.indexer.GitDetectiveIndexer'

repositories {
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
}

dependencies {
    compile project(":web")
//    compile group: 'org.apache.maven.shared', name: 'maven-invoker', version: '3.0.0'
//    compile group: 'org.gradle', name: 'gradle-tooling-api', version: '4.9'
//    compile group: 'org.kohsuke', name: 'github-api', version: '1.92'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.10.2'
    compile 'io.vertx:vertx-web-client:3.8.5'
    compile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '5.6.1.202002131546-r'
    compile files("../indexer/opt/kythe-v0.0.28/indexers/java_indexer.jar")
    compile(group: 'com.github.codebrig', name: 'phenomena', version: 'aa7b317ccf') {
        exclude group: 'io.grakn.client', module: 'grakn-client'
        exclude group: 'io.grakn.client', module: 'api'
        exclude group: 'io.graql', module: 'graql-lang'
    }
    compile(group: 'com.github.codebrig', name: 'kythe-phenomenon', version: '4ba0c23e8c') {
        exclude group: 'io.grakn.client', module: 'grakn-client'
        exclude group: 'io.grakn.client', module: 'api'
        exclude group: 'io.graql', module: 'graql-lang'
    }
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
}

test {
    dependsOn "startDocker"
    finalizedBy "stopDocker"

    testLogging {
        events "passed", "skipped", "failed"
        setExceptionFormat("full")

        outputs.upToDateWhen { false }
        showStandardStreams = true
    }
}

dockerCompose {
    useComposeFiles = ['./docker-compose.yml']
    dockerComposeWorkingDirectory = '../docker/'
    captureContainersOutput = true
    startedServices = ["bblfshd", "grakn", "timescaledb", "redis", "gitdetective"]
}

task buildAndMove {
    dependsOn ":web:distZip"
    doLast {
        copy {
            from "../web/build/distributions/web-" + version + ".zip"
            into "../docker"
        }
        copy {
            from "../web/src/main/resources/webroot/helper"
            into "../docker/helper"
        }
        copy {
            from "../web/src/main/resources/webroot/static.zip"
            into "../docker"
        }
    }
}

task startDocker {
    dependsOn "buildAndMove", "composeUp"
}
startDocker.mustRunAfter buildAndMove

task stopDocker {
    dependsOn "composeDown"
    doLast {
        file("../docker/web-" + version + ".zip").delete()
        file("../docker/static.zip").delete()
        file("../docker/helper").deleteDir()
    }
}