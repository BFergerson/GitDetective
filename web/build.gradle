plugins {
    id "com.avast.gradle.docker-compose" version "0.6.11"
}

group = 'io.gitdetective.web'

apply plugin: 'application'
mainClassName = 'io.gitdetective.web.WebLauncher'

dependencies {
    compile 'io.vertx:vertx-pg-client:4.0.0'
    compile group: 'io.dropwizard.metrics', name: 'metrics-core', version: '4.1.2'
    compile group: 'io.vertx', name: 'vertx-web', version: '4.0.0'
    compile group: 'io.vertx', name: 'vertx-web-templ-handlebars', version: '4.0.0'
    compile 'io.vertx:vertx-dropwizard-metrics:4.0.0'
    compile 'io.vertx:vertx-tcp-eventbus-bridge:4.0.0'
    compile "io.vertx:vertx-auth-jwt:4.0.0"
    compile 'io.reactivex.rxjava2:rxjava:2.2.17'
    implementation('com.codebrig:arthur:0.4.4') {
        exclude group: 'log4j', module: 'log4j'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
    implementation group: 'io.grakn.client', name: 'grakn-client', version: "2.0.0-alpha-6"
}

test {
    dependsOn "composeUp"
    finalizedBy "composeDown"

    testLogging {
        events "passed", "skipped", "failed"
        setExceptionFormat("full")

        outputs.upToDateWhen { false }
        showStandardStreams = true
    }
}

dockerCompose {
    useComposeFiles = ['./docker-compose.yml']
    dockerComposeWorkingDirectory = '../docker/'
    captureContainersOutput = true
    startedServices = ["grakn", "timescaledb", "redis"]
}

task rebootWeb {
    dependsOn "composeDown"
    finalizedBy "composeUp"
}